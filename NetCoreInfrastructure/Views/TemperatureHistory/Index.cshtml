@section csses
    {
}

<div>选择烤箱
    <el-select v-model="oven" filterable placeholder="请选择">
    <el-option
      v-for="item in ovens"
      :key="item.key"
      :label="item.label"
      :value="item.value">
    </el-option>
  </el-select>
</div>
<div class="block" id="datepicker">
    <span class="demonstration">选择时间段</span>
    <el-date-picker v-model="datevalue"  
                    type="datetimerange"
                    range-separator="至"
                    start-placeholder="开始日期"
                    end-placeholder="结束日期">
    </el-date-picker>
      <el-button type="primary" v-on:click ="Query" >查询</el-button>
</div>

<div id="myChart" style="width:1000px;height:600px" ref="chart"></div>

@section Scripts
    {
    <script>
        var vm = new Vue({
            el: '#app',
            data() {
                return {
                    datevalue: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],
                    echartdata: {
                        'timestamp': [1, 2, 3, 4, 5, 6],
                        'P1': [15, 20, 36, 10, 10, 100],
                        'P2': [5, 120, 36, 10, 10, 100],
                        'P3': [5, 20, 136, 10, 10, 100],
                        'P4': [5, 20, 36, 110, 10, 100],
                        'P5': [5, 20, 36, 110, 10, 100],
                        'P6': [5, 20, 36, 10, 110, 100],
                    },
                        ovens: [{
                            value: '',
                            label: ''
                        }],
                        oven: ''
                    
                }
            },
            mounted() {
                this.drawLine();
            },
            methods: {
                //echarts绘制函数
                drawLine() {
                    // 基于准备好的dom，初始化echarts实例
                    let myChart = echarts.init(document.getElementById('myChart'), 'walden')
                    // 绘制图表
                    myChart.setOption({
                        title: { x: 'middle', text: '温度监控' },
                        tooltip: {},
                        legend: {
                            x: 'right',
                            orient: 'vertical',
                            data: ['P1', 'P2', 'P3', 'P4', 'P5', 'P6']
                        },
                        xAxis: {
                            data: this.echartdata.timestamp
                        },
                        yAxis: {
                        },
                        dataZoom: [{
                            type: 'slider',//图表下方的伸缩条
                            show: true, //是否显示
                            realtime: true, //拖动时，是否实时更新系列的视图
                            start: 0, //伸缩条开始位置（1-100），可以随时更改
                            end: 100, //伸缩条结束位置（1-100），可以随时更改
                        }],
                        series: [{
                            name: 'P1',
                            type: 'line',
                            data: this.echartdata.P1
                        }, {
                            name: 'P2',
                            type: 'line',
                            data: this.echartdata.P2
                            },
                        , {
                            name: 'P3',
                            type: 'line',
                            data: this.echartdata.P3
                        }, {
                            name: 'P4',
                            type: 'line',
                            data: this.echartdata.P4
                        }, {
                            name: 'P5',
                            type: 'line',
                            data: this.echartdata.P5
                        }, {
                            name: 'P6',
                            type: 'line',
                            data: this.echartdata.P6
                        }]
                    });
                },
                //请求查询的时间段
                Query()
                {
                    axios.get("/TemperatureMonitor/Check?start=" + this.datevalue[0] + "&end=" + this.datevalue[1]).then(re => {
                    if (re.data.status == 200) {
                        this.$notify.success({ title: "成功", message: "查询成功" });
                    }
                    }).catch(error => {
                        this.$notify.error({
                            title: "查询失败",
                            message: error
                        });
                    });
                }
            }
        }
    )
        //更新元素
        function Query(value, ok, id) {
        //隐藏元素
        if (id) {
            document.getElementById(id).style.display = 'none';
        }
        let add = new Dlg({
            propsData: {
                close: () => {
                    if (id) {
                        //恢复
                        document.getElementById(id).style.display = '';
                    }
                    add.$el.remove();
                },
                ok: ok,
                title: '',
                form: JSON.parse(JSON.stringify(value)),
                Add: false,
                Edit: true
            }
        });
        let vm = add.$mount();
        let el = vm.$el;
        document.body.appendChild(el);
        vm.show = true;
    }
    </script>
}